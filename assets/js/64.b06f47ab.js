(window.webpackJsonp=window.webpackJsonp||[]).push([[64],{400:function(t,r,e){"use strict";e.r(r);var a=e(5),v=Object(a.a)({},(function(){var t=this,r=t._self._c;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"工作流程"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#工作流程"}},[t._v("#")]),t._v(" 工作流程")]),t._v(" "),r("p",[t._v("是时候让你了解一下我的工作方式了。")]),t._v(" "),r("h2",{attrs:{id:"url-解析"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#url-解析"}},[t._v("#")]),t._v(" url 解析")]),t._v(" "),r("p",[t._v("最开始，我会解析你的 url 类型，依此送入 "),r("a",{staticClass:"link-hover-effect external-link",attrs:{href:"https://github.com/yutto-dev/bilili/blob/main/src/bilili/parser/bangumi.py",target:"_blank",rel:"noopener noreferrer"}},[t._v("bangumi API 解析器"),r("OutboundLink")],1),t._v("或者 "),r("a",{staticClass:"link-hover-effect external-link",attrs:{href:"https://github.com/yutto-dev/bilili/blob/main/bilili/src/parser/acg_video.py",target:"_blank",rel:"noopener noreferrer"}},[t._v("acg_video API 解析器"),r("OutboundLink")],1)]),t._v(" "),r("h2",{attrs:{id:"列表获取"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#列表获取"}},[t._v("#")]),t._v(" 列表获取")]),t._v(" "),r("p",[t._v("两个解析器会从当前 url 中获取关键信息，并通过 B 站的相关 API 中获取整个播放列表，番剧自然就是该番该季的全部剧集，而投稿视频则是各 P 的信息。")]),t._v(" "),r("h2",{attrs:{id:"视频链接获取"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#视频链接获取"}},[t._v("#")]),t._v(" 视频链接获取")]),t._v(" "),r("p",[t._v("进一步地，通过 B 站相关 API 来获取各个视频的链接。")]),t._v(" "),r("p",[t._v("这里视频链接的获取当前是有多种格式可选的，B 站早期使用的是 Flash 播放器，自然使用的是 "),r("code",[t._v("flv")]),t._v(" 格式的视频，B 站的 "),r("code",[t._v("flv")]),t._v(" 视频大多是分段的，因此下载之后需要合并。")]),t._v(" "),r("p",[t._v("后来 B 站采用 HTML5 播放器的时候貌似"),r("a",{staticClass:"link-hover-effect external-link",attrs:{href:"https://github.com/Bilibili/flv.js/",target:"_blank",rel:"noopener noreferrer"}},[t._v("也在使用 flv 格式"),r("OutboundLink")],1),t._v("，当然用的 API 应当也是 flv 的 API。")]),t._v(" "),r("p",[t._v("现在的 HTML5 播放器返回的是通过 "),r("a",{staticClass:"link-hover-effect external-link",attrs:{href:"https://www.bilibili.com/read/cv855111",target:"_blank",rel:"noopener noreferrer"}},[t._v("dash 方式组织的 "),r("code",[t._v("m4s")]),t._v(" 格式的文件"),r("OutboundLink")],1),t._v("，一个是音频文件，另一个自然就是视频文件咯。")]),t._v(" "),r("p",[t._v("除此之外，还可以请求出投稿视频的 "),r("code",[t._v("mp4")]),t._v(" 格式文件，但一般清晰度并不会太高，而且清晰度也不能自己指定，限制还是蛮多的。")]),t._v(" "),r("h2",{attrs:{id:"弹幕、字幕获取"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#弹幕、字幕获取"}},[t._v("#")]),t._v(" 弹幕、字幕获取")]),t._v(" "),r("p",[t._v("当然，看 B 站视频的话弹幕是不可或缺的，因此我会帮你自动下载 xml 格式的弹幕。")]),t._v(" "),r("p",[t._v("有些视频存在字幕，因此也会一并下载。")]),t._v(" "),r("h2",{attrs:{id:"视频下载"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#视频下载"}},[t._v("#")]),t._v(" 视频下载")]),t._v(" "),r("p",[t._v("此时，由于每个视频的真实 url 我们都已经得到了，因此就可以直接下载咯～")]),t._v(" "),r("p",[t._v("为了提高下载速度，我会同时幻化出多个分身（子线程），另外我还会将每个视频切成小块，将每个小块分发给一个分身来下载。")]),t._v(" "),r("p",[t._v("当然，当一个视频块下载完成需要合并，这个过程会由下载最后那个块的分身来完成。")]),t._v(" "),r("p",[t._v("另外我还安排了三个分身用于视频片段的合并，如果一个视频所有片段都下载完成，就会通知她们进行合并。")]),t._v(" "),r("p",[t._v("什么？你问我我在干嘛？我会在旁边监督她们的啦，同时会告诉你她们的进度，嘻嘻～")])])}),[],!1,null,null,null);r.default=v.exports}}]);