(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{392:function(t,e,a){"use strict";a.r(e);var v=a(5),_=Object(v.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"命令行参数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#命令行参数"}},[t._v("#")]),t._v(" 命令行参数")]),t._v(" "),e("p",[t._v("我能做到的远不止你看到的这些哦～")]),t._v(" "),e("details",{staticClass:"custom-block details"},[e("summary",[t._v("参数的使用方法")]),t._v(" "),e("p",[t._v("如果你经常使用命令行工具的话，这部分直接跳过就好啦～")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("指定参数值")]),t._v(" "),e("p",[t._v("比如你需要修改下载格式为 flv，只需要")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("bilili "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("url"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--type")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("flv\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 或者")]),t._v("\nbilili "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("url"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-t")]),t._v(" flv\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 当然你也可以不拘泥于这样的用法，下面这两种当然也是可以的")]),t._v("\nbilili "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("url"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-t")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("flv\nbilili "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("url"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--type")]),t._v(" flv\n")])])])]),t._v(" "),e("li",[e("p",[t._v("切换 "),e("code",[t._v("True")]),t._v(" or "),e("code",[t._v("False")])]),t._v(" "),e("p",[t._v("对于那些不需要指定具体值，只切换 "),e("code",[t._v("True")]),t._v(" or "),e("code",[t._v("False")]),t._v(" 的参数，你也不需要在命令中指定值，比如开启强制覆盖已下载视频选项")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("bilili "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("url"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--overwrite")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 或者")]),t._v("\nbilili "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("url"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-w")]),t._v("\n")])])])]),t._v(" "),e("li",[e("p",[t._v("多参数同时使用")]),t._v(" "),e("p",[t._v("直接向后加即可，而且 "),e("code",[t._v("<url>")]),t._v(" 和其它参数都不强制要求顺序，比如下面这些命令都是合法的")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("bilili "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("url"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--overwrite")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--type")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("flv\nbilili "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--overwrite")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-t")]),t._v(" flv "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("url"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\nbilili "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-w")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("url"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--type")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("flv\n")])])])])])]),t._v(" "),e("h2",{attrs:{id:"源格式修改"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#源格式修改"}},[t._v("#")]),t._v(" 源格式修改")]),t._v(" "),e("ul",[e("li",[t._v("参数 "),e("code",[t._v("-t")]),t._v(" 或 "),e("code",[t._v("--type")])]),t._v(" "),e("li",[t._v("可选值 "),e("code",[t._v("flv | dash | mp4")])]),t._v(" "),e("li",[t._v("默认值 "),e("code",[t._v("dash")])])]),t._v(" "),e("p",[t._v("视频格式是指 bilibili 直接提供的资源格式，不过我最终都会转换成通用的 "),e("code",[t._v("mp4")]),t._v(" 格式方便观看的啦，不同格式在通用性、下载速度等方面的比较如下")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",{staticStyle:{"text-align":"center"}}),t._v(" "),e("th",{staticStyle:{"text-align":"center"}},[t._v("dash")]),t._v(" "),e("th",{staticStyle:{"text-align":"center"}},[t._v("flv")]),t._v(" "),e("th",{staticStyle:{"text-align":"center"}},[t._v("mp4")])])]),t._v(" "),e("tbody",[e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("支持程度")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("中（少数视频不支持）")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("高")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("低（仅支持投稿视频）")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("下载速度")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("高")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("低")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("中")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("需要 FFmpeg 合并")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("是")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("是")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("否")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("清晰度支持")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("全面")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("中（部分较新的 4K 等清晰度无法获取）")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("极少（仅支持 1080P 及更低的清晰度，且无法选择）")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("备用链接数量")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("2")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("2")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("0")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("我该怎么选")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("B 站当前使用的格式，拥有齐全的清晰度和最佳的下载速度")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("当 dash 无法下载时的备用选项")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("除了不需要合并，一无是处")])])])]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),e("p",[t._v("为了提高项目的可维护性，flv 格式与 mp4 格式支持将会在未来删除。")])]),t._v(" "),e("h2",{attrs:{id:"指定存储目录"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#指定存储目录"}},[t._v("#")]),t._v(" 指定存储目录")]),t._v(" "),e("ul",[e("li",[t._v("参数 "),e("code",[t._v("-d")]),t._v(" 或 "),e("code",[t._v("--dir")])]),t._v(" "),e("li",[t._v("默认值 运行目录")])]),t._v(" "),e("p",[t._v("也就是指定我要把视频放到哪里啦，不告诉我的话，就只能放在你的运行目录了。")]),t._v(" "),e("h2",{attrs:{id:"指定视频清晰度"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#指定视频清晰度"}},[t._v("#")]),t._v(" 指定视频清晰度")]),t._v(" "),e("ul",[e("li",[t._v("参数 "),e("code",[t._v("-q")]),t._v(" 或 "),e("code",[t._v("--quality")])]),t._v(" "),e("li",[t._v("可选值 "),e("code",[t._v("127 | 125 | 120 | 116 | 116 | 112 | 80 | 74 | 64 | 32 | 16")])]),t._v(" "),e("li",[t._v("默认值 "),e("code",[t._v("127")])])]),t._v(" "),e("p",[t._v("清晰度对应关系如下")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",{staticStyle:{"text-align":"center"}},[t._v("code")]),t._v(" "),e("th",{staticStyle:{"text-align":"center"}},[t._v("清晰度")])])]),t._v(" "),e("tbody",[e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("127")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("8K 超高清")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("125")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("HDR 真彩")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("120")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("4K 超清")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("116")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("1080P 60帧")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("112")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("1080P 高码率")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("80")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("1080P 高清")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("74")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("720P 60帧")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("64")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("720P 高清")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("32")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("480P 清晰")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("16")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("360P 流畅")])])])]),t._v(" "),e("p",[t._v("并不是说指定某个清晰度就一定会下载该清晰度的视频，我只会尽可能满足你的要求，如果不存在指定的清晰度，我就会按照默认的清晰度搜索机制进行调节，比如指定清晰度为 "),e("code",[t._v("80")]),t._v("，"),e("strong",[t._v("我首先会依次降清晰度搜索")]),t._v(" "),e("code",[t._v("74")]),t._v("、"),e("code",[t._v("64")]),t._v("、"),e("code",[t._v("32")]),t._v("、"),e("code",[t._v("16")]),t._v("，如果依然找不到合适的则"),e("strong",[t._v("继续升清晰度搜索")]),t._v(" "),e("code",[t._v("112")]),t._v("、"),e("code",[t._v("116")]),t._v("、"),e("code",[t._v("120")]),t._v("、"),e("code",[t._v("125")]),t._v("、"),e("code",[t._v("127")]),t._v("。")]),t._v(" "),e("h2",{attrs:{id:"修改下载线程最大数量"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#修改下载线程最大数量"}},[t._v("#")]),t._v(" 修改下载线程最大数量")]),t._v(" "),e("ul",[e("li",[t._v("参数 "),e("code",[t._v("-n")]),t._v(" 或 "),e("code",[t._v("--num-threads")])]),t._v(" "),e("li",[t._v("默认值 "),e("code",[t._v("16")])])]),t._v(" "),e("p",[t._v("也就是我的下载分身数量咯，越多的话，同时下载的视频块就越多，但并不是说分身越多就越好哟，如果你的带宽不够，分身再多也木有用滴。")]),t._v(" "),e("h2",{attrs:{id:"指定需要下载的剧集"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#指定需要下载的剧集"}},[t._v("#")]),t._v(" 指定需要下载的剧集")]),t._v(" "),e("ul",[e("li",[t._v("参数 "),e("code",[t._v("-p")]),t._v(" 或 "),e("code",[t._v("--episodes")])]),t._v(" "),e("li",[t._v("默认值 "),e("code",[t._v("^~$")]),t._v("（也即全选）")])]),t._v(" "),e("p",[t._v("也就是选集咯，其语法是这样的")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("<p1>")]),t._v(" 单独下某一剧集\n"),e("ul",[e("li",[t._v("支持负数来选择倒数第几话")]),t._v(" "),e("li",[t._v("此外还可以使用 "),e("code",[t._v("^")]),t._v(" 与 "),e("code",[t._v("$")]),t._v(" 来分别代表 "),e("code",[t._v("1")]),t._v(" 与 "),e("code",[t._v("-1")])])])]),t._v(" "),e("li",[e("code",[t._v("<p_start>~<p_end>")]),t._v(" 使用 "),e("code",[t._v("~")]),t._v(" 可以连续选取")]),t._v(" "),e("li",[e("code",[t._v("<p1>,<p2>,<p3>,...,<pn>")]),t._v(" 使用 "),e("code",[t._v(",")]),t._v(" 可以不连续选取")])]),t._v(" "),e("p",[t._v("emmm，直接看的话大概并不能知道我在说什么，所以我们通过几个小例子来了解其语法")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 假设要下载一个具有 24 话的番剧")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 如果我们只想下载第 3 话，只需要这样")]),t._v("\nbilili "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("url"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-p")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 那如果我想下载第 5 话到第 7 话呢，使用 `~` 可以连续选中")]),t._v("\nbilili "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("url"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-p")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("~7\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 那我想下载第 12 话和第 17 话又要怎么办？此时只需要 `,` 就可以将多个不连续的选集一起选中")]),t._v("\nbilili "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("url"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-p")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("12,17")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 那我突然又想将刚才那些都选中了呢？还是使用 `,` 呀，将它们连在一起即可")]),t._v("\nbilili "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("url"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-p")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3,5")]),t._v("~7,12,17\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 嗯，你已经把基本用法都了解过了，很简单吧～")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 下面是一些语法糖，不了解也完全不会影响任何功能哒～")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 那如果我只知道我想下载倒数第 3 话，而不想算倒数第三话是第几话应该怎么办？")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 此时可以用负数哒～不过要注意的是，开头如果是 `-` 的话前面应该使用 `=`")]),t._v("\nbilili "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("url"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-p")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("-3\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 那么如果想下载最后一话你可能会想到 `-p=-1` 对吧？不过我内置了两个符号分别代表第一话（^）和最后一话（$）")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 像下面这样就可以直接下载最后一话啦～")]),t._v("\nbilili "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("url"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-p")]),t._v(" $\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 所有语法都了解完啦，我们看一个稍微复杂的例子")]),t._v("\nbilili "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("url"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-p")]),t._v(" ^~3,10,12~14,16,-4~$\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 很明显，上面的例子就是下载前 3 话、第 10 话、第 12 到 14 话、第 16 话以及后 4 话")]),t._v("\n")])])]),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("一些要注意的问题")]),t._v(" "),e("ol",[e("li",[t._v("这里使用的序号是视频的顺序序号，而不是番剧所标注的"),e("code",[t._v("第 n 话")]),t._v("，因为有可能会出现 "),e("code",[t._v("第 x.5 话")]),t._v(" 等等的特殊情况，此时一定要按照顺序自行计数。")]),t._v(" "),e("li",[t._v("参数值里一定不要加空格")]),t._v(" "),e("li",[t._v("参数值开头为 "),e("code",[t._v("-")]),t._v(" 时前面应该使用 "),e("code",[t._v("=")]),t._v(" 而非空格")])])]),t._v(" "),e("h2",{attrs:{id:"同时下载附加剧集"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#同时下载附加剧集"}},[t._v("#")]),t._v(" 同时下载附加剧集")]),t._v(" "),e("ul",[e("li",[t._v("参数 "),e("code",[t._v("-s")]),t._v(" 或 "),e("code",[t._v("--with-section")])]),t._v(" "),e("li",[t._v("默认值 "),e("code",[t._v("False")])])]),t._v(" "),e("p",[t._v("默认是不会下载 PV、预告以及特别篇等专区内容部分的，指定该参数才可以下载哦～")]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("与选集功能的组合")]),t._v(" "),e("p",[t._v("值得注意的是，该部分与番剧剧集部分统一编号，且位于番剧剧集后面")]),t._v(" "),e("p",[t._v("比如说一个 11 话的番剧，此外有额外 2 话附加剧集，如果只需要下载附加剧集的话只需要使用下面的命令即可：")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("bilili "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("url"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-p")]),t._v(" -2~$\n")])])])]),t._v(" "),e("h2",{attrs:{id:"强制覆盖已下载视频"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#强制覆盖已下载视频"}},[t._v("#")]),t._v(" 强制覆盖已下载视频")]),t._v(" "),e("ul",[e("li",[t._v("参数 "),e("code",[t._v("-w")]),t._v(" 或 "),e("code",[t._v("--overwrite")])]),t._v(" "),e("li",[t._v("默认值 "),e("code",[t._v("False")])])]),t._v(" "),e("p",[t._v("也就是强制将已经下载过的部分覆盖掉啦。")]),t._v(" "),e("h2",{attrs:{id:"个人信息认证"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#个人信息认证"}},[t._v("#")]),t._v(" 个人信息认证")]),t._v(" "),e("ul",[e("li",[t._v("参数 "),e("code",[t._v("-c")]),t._v(" 或 "),e("code",[t._v("--sess-data")])]),t._v(" "),e("li",[t._v("默认值 "),e("code",[t._v('""')])])]),t._v(" "),e("p",[t._v("使用个人认证可以让你下载更高清晰度以及更多的剧集，当你传入你的大会员 "),e("code",[t._v("SESSDATA")]),t._v(" 时（当然前提是你是大会员），你就可以下载大会员可访问的资源咯。")]),t._v(" "),e("details",{staticClass:"custom-block details"},[e("summary",[t._v("SESSDATA 获取方式")]),t._v(" "),e("p",[t._v("这里用 Chrome 作为示例，其它浏览器请尝试类似方法。")]),t._v(" "),e("p",[t._v("首先，用你的帐号登录 B 站，然后随便打开一个 B 站网页，比如"),e("a",{staticClass:"link-hover-effect external-link",attrs:{href:"https://www.bilibili.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("首页"),e("OutboundLink")],1),t._v("。")]),t._v(" "),e("p",[t._v("按 F12 打开开发者工具，切换到 Network 栏，刷新页面，此时第一个加载的资源应该就是当前页面的 html，选中该资源，在右侧 「Request Headers」 中找到 「cookie」，在其中找到类似于 "),e("code",[t._v("SESSDATA=d8bc7493%2C2843925707%2C08c3e*81;")]),t._v(" 的一串字符串，复制这里的 "),e("code",[t._v("d8bc7493%2C2843925707%2C08c3e*81")]),t._v("，这就是你需要的 "),e("code",[t._v("SESSDATA")]),t._v("。")])]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),e("p",[t._v("SESSDATA 中可能有特殊符号，所以传入时你可能需要使用双引号来包裹")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("bilili "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("url"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-c")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"d8bc7493%2C2843925707%2C08c3e*81"')]),t._v("\n")])])])]),t._v(" "),e("h2",{attrs:{id:"跳过下载询问"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#跳过下载询问"}},[t._v("#")]),t._v(" 跳过下载询问")]),t._v(" "),e("ul",[e("li",[t._v("参数 "),e("code",[t._v("-y")]),t._v(" 或 "),e("code",[t._v("--yes")])]),t._v(" "),e("li",[t._v("默认值 "),e("code",[t._v("False")])])]),t._v(" "),e("p",[t._v("跳过下载前的询问。")]),t._v(" "),e("h2",{attrs:{id:"指定音频码率等级"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#指定音频码率等级"}},[t._v("#")]),t._v(" 指定音频码率等级")]),t._v(" "),e("ul",[e("li",[t._v("参数 "),e("code",[t._v("--audio-quality")])]),t._v(" "),e("li",[t._v("可选值 "),e("code",[t._v("30280 | 30232 | 30216")])]),t._v(" "),e("li",[t._v("默认值 "),e("code",[t._v("30280")])])]),t._v(" "),e("p",[t._v("码率对应关系如下")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",{staticStyle:{"text-align":"center"}},[t._v("code")]),t._v(" "),e("th",{staticStyle:{"text-align":"center"}},[t._v("码率")])])]),t._v(" "),e("tbody",[e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("30280")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("320kbps")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("30232")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("128kbps")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("30216")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("64kbps")])])])]),t._v(" "),e("p",[t._v("码率自动调节机制与视频清晰度一致，也采用先降后升的匹配机制。")]),t._v(" "),e("h2",{attrs:{id:"指定播放列表类型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#指定播放列表类型"}},[t._v("#")]),t._v(" 指定播放列表类型")]),t._v(" "),e("ul",[e("li",[t._v("参数 "),e("code",[t._v("--playlist-type")])]),t._v(" "),e("li",[t._v("可选值 "),e("code",[t._v("dpl | m3u | no")])]),t._v(" "),e("li",[t._v("默认值 "),e("code",[t._v("dpl")])])]),t._v(" "),e("p",[e("code",[t._v("dpl")]),t._v(" 是 PotPlayer 的专属播放列表格式，PotPlayer 可以在其中保存进度等。")]),t._v(" "),e("p",[t._v("而 "),e("code",[t._v("m3u")]),t._v(" 有着更好的通用性，大多数播放器都支持。")]),t._v(" "),e("p",[t._v("当然指定 "),e("code",[t._v("no")]),t._v(" 就是不生成播放列表。")]),t._v(" "),e("h2",{attrs:{id:"指定下载弹幕类型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#指定下载弹幕类型"}},[t._v("#")]),t._v(" 指定下载弹幕类型")]),t._v(" "),e("ul",[e("li",[t._v("参数 "),e("code",[t._v("--danmaku")])]),t._v(" "),e("li",[t._v("可选值 "),e("code",[t._v("xml | ass | no")])]),t._v(" "),e("li",[t._v("默认值 "),e("code",[t._v("xml")])])]),t._v(" "),e("p",[t._v("B 站只提供 "),e("code",[t._v("xml")]),t._v(" 格式的弹幕，因此我默认会下载 "),e("code",[t._v("xml")]),t._v(" 格式的弹幕，但本地播放器一般不支持 B 站提供的默认弹幕，因此需要你手动转换，比如使用 "),e("a",{staticClass:"link-hover-effect external-link",attrs:{href:"https://tiansh.github.io/us-danmaku/bilibili/",target:"_blank",rel:"noopener noreferrer"}},[t._v("us-danmaku"),e("OutboundLink")],1),t._v(" 在线转换。")]),t._v(" "),e("p",[t._v("其实我也可以帮你自动转换哒，只需要指定值为 "),e("code",[t._v("ass")]),t._v(" 就好啦。")]),t._v(" "),e("p",[t._v("当然指定为 "),e("code",[t._v("no")]),t._v(" 就是不需要弹幕咯。")]),t._v(" "),e("h2",{attrs:{id:"指定分块下载时块的大小"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#指定分块下载时块的大小"}},[t._v("#")]),t._v(" 指定分块下载时块的大小")]),t._v(" "),e("ul",[e("li",[t._v("参数 "),e("code",[t._v("--block-size")])]),t._v(" "),e("li",[t._v("默认值 "),e("code",[t._v("128")])])]),t._v(" "),e("p",[t._v("因为内置分块下载机制，该参数就是指定分块下载的块大小咯，单位为 "),e("code",[t._v("MB")]),t._v("，当设置为 "),e("code",[t._v("0")]),t._v(" 时可以禁用分块下载功能。")]),t._v(" "),e("h2",{attrs:{id:"修改播放列表路径类型为绝对路径"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#修改播放列表路径类型为绝对路径"}},[t._v("#")]),t._v(" 修改播放列表路径类型为绝对路径")]),t._v(" "),e("ul",[e("li",[t._v("参数 "),e("code",[t._v("--abs-path")])]),t._v(" "),e("li",[t._v("默认值 "),e("code",[t._v("False")])])]),t._v(" "),e("p",[t._v("播放列表默认使用的是相对路径，这样即便移动下载后的文件夹也可以正常播放。")]),t._v(" "),e("p",[t._v("但偶尔有些播放器不支持相对路径的播放列表，所以提供了该选项来指定为绝对路径。当然，为了播放列表的灵活性，你应当只在发生本情况的前提下修改本参数。")]),t._v(" "),e("h2",{attrs:{id:"启用从多个镜像源下载功能"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#启用从多个镜像源下载功能"}},[t._v("#")]),t._v(" 启用从多个镜像源下载功能")]),t._v(" "),e("ul",[e("li",[t._v("参数 "),e("code",[t._v("--use-mirrors")])]),t._v(" "),e("li",[t._v("默认值 "),e("code",[t._v("False")])])]),t._v(" "),e("p",[t._v("从多个镜像下载，当然，由于我的每个分身（子线程）只处理一个块，所以被分为多个块的资源才有效哦。")]),t._v(" "),e("h2",{attrs:{id:"绕过系统代理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#绕过系统代理"}},[t._v("#")]),t._v(" 绕过系统代理")]),t._v(" "),e("ul",[e("li",[t._v("参数 "),e("code",[t._v("--disable-proxy")])]),t._v(" "),e("li",[t._v("默认值 "),e("code",[t._v("False")])])]),t._v(" "),e("p",[t._v("因为我的依赖 requests 库会自动使用系统代理，使用本参数就可以绕过它啦。")]),t._v(" "),e("h2",{attrs:{id:"不显示任何颜色"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#不显示任何颜色"}},[t._v("#")]),t._v(" 不显示任何颜色")]),t._v(" "),e("ul",[e("li",[t._v("参数 "),e("code",[t._v("--no-color")])]),t._v(" "),e("li",[t._v("默认值 "),e("code",[t._v("False")])])]),t._v(" "),e("p",[t._v("不显示任何颜色，除了使用参数 "),e("code",[t._v("--no-color")]),t._v(" 外，设定环境变量 "),e("code",[t._v("NO_COLOR")]),t._v(" 为非空值也可以达到同样的效果，可参照 "),e("a",{staticClass:"link-hover-effect external-link",attrs:{href:"https://no-color.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://no-color.org/"),e("OutboundLink")],1),t._v("。")]),t._v(" "),e("h2",{attrs:{id:"开启-debug-模式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#开启-debug-模式"}},[t._v("#")]),t._v(" 开启 Debug 模式")]),t._v(" "),e("ul",[e("li",[t._v("参数 "),e("code",[t._v("--debug")])]),t._v(" "),e("li",[t._v("默认值 "),e("code",[t._v("False")])])]),t._v(" "),e("p",[t._v("对 debug 更友好的模式，仅开发时使用。")])])}),[],!1,null,null,null);e.default=_.exports}}]);