import{_ as e,C as h,c as p,o as k,ag as n,j as i,a,G as l}from"./chunks/framework.BmLMQRXF.js";const C=JSON.parse('{"title":"命令行参数","description":"","frontmatter":{},"headers":[],"relativePath":"guide/cli/introduction.md","filePath":"guide/cli/introduction.md"}'),d={name:"guide/cli/introduction.md"},r={id:"配置文件",tabindex:"-1"};function o(g,s,c,y,E,F){const t=h("Badge");return k(),p("div",null,[s[8]||(s[8]=n(`<h1 id="命令行参数" tabindex="-1">命令行参数 <a class="header-anchor" href="#命令行参数" aria-label="Permalink to &quot;命令行参数&quot;">​</a></h1><p>既然我是基于 CLI（Command Line Interface）的工具，那么自然而然，我支持很多命令行参数来让你更好地调度我。</p><p>就比如说，你可以添加 <code>-d</code> 参数来指定下载的视频路径，或者使用 <code>-c</code> 参数来设置用于登录状态的 Cookie（准确来说是其中的 <code>SESSDATA</code>）。</p><h2 id="参数的使用方式" tabindex="-1">参数的使用方式 <a class="header-anchor" href="#参数的使用方式" aria-label="Permalink to &quot;参数的使用方式&quot;">​</a></h2><p>如果你是第一次接触命令行，那么你可能会对这些参数的使用方式感到困惑。</p><p>不过，不用担心，我会在这里为你详细地介绍一下。</p><h3 id="指定参数值" tabindex="-1">指定参数值 <a class="header-anchor" href="#指定参数值" aria-label="Permalink to &quot;指定参数值&quot;">​</a></h3><p>比如你需要修改下载路径到 <code>/path/to/videos</code>，只需要</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yutto</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">ur</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">l</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --dir</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /path/to/videos</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 或者使用短参数 -d</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yutto</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">ur</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">l</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /path/to/videos</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 你也可以使用 = 将参数 key 和 value 连接在一起</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yutto</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">ur</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">l</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d=/path/to/videos</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yutto</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">ur</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">l</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --dir=/path/to/videos</span></span></code></pre></div><h3 id="切换-true-or-false" tabindex="-1">切换 <code>True</code> or <code>False</code> <a class="header-anchor" href="#切换-true-or-false" aria-label="Permalink to &quot;切换 \`True\` or \`False\`&quot;">​</a></h3><p>对于那些不需要指定具体值，只切换 <code>True</code> or <code>False</code> 的参数，你也不需要在命令中指定值，比如开启强制覆盖已下载视频选项</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yutto</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">ur</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">l</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --overwrite</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 或者</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yutto</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">ur</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">l</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -w</span></span></code></pre></div><h3 id="多参数同时使用" tabindex="-1">多参数同时使用 <a class="header-anchor" href="#多参数同时使用" aria-label="Permalink to &quot;多参数同时使用&quot;">​</a></h3><p>当然，同时使用多个参数也是允许的，只需要写在一起即可，而且 <code>&lt;url&gt;</code> 和其它参数都不强制要求顺序，比如下面这些命令都是合法的</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yutto</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">ur</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">l</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --overwrite</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --dir=/path/to/videos</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yutto</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --overwrite</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /path/to/videos</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">ur</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">l</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yutto</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -w</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">ur</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">l</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --d=/path/to/videos</span></span></code></pre></div><h2 id="更多参数" tabindex="-1">更多参数 <a class="header-anchor" href="#更多参数" aria-label="Permalink to &quot;更多参数&quot;">​</a></h2><p>当然，这些只是冰山一角啦，我支持的参数远不止这些，你可以通过 <code>yutto --help</code> 来查看所有支持的参数。也可以前往以下页面查看具体介绍：</p>`,17)),i("ul",null,[s[2]||(s[2]=i("li",null,[i("a",{href:"./basic"},"基础参数")],-1)),s[3]||(s[3]=i("li",null,[i("a",{href:"./resource"},"资源选择参数")],-1)),i("li",null,[s[0]||(s[0]=i("a",{href:"./danmaku"},"弹幕设置参数",-1)),s[1]||(s[1]=a()),l(t,{text:"Experimental",type:"warning"})]),s[4]||(s[4]=i("li",null,[i("a",{href:"./batch"},"批量下载参数")],-1))]),i("h2",r,[s[5]||(s[5]=a("配置文件 ")),l(t,{text:"Experimental",type:"warning"}),s[6]||(s[6]=a()),s[7]||(s[7]=i("a",{class:"header-anchor",href:"#配置文件","aria-label":'Permalink to "配置文件 <Badge text="Experimental" type="warning"/>"'},"​",-1))]),s[9]||(s[9]=n(`<p>当你熟悉 CLI 界面后，可能每次下载视频的时候都需要输入一长串的参数，你可能会希望有一种方式来保存常用的参数，下次下载时直接使用，这时候配置文件就派上用场啦～</p><p>你可以通过 <code>--config</code> 参数来指定配置文件的路径，比如</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yutto</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --config</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /path/to/config.toml</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">ur</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">l</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><p>我还支持配置自动发现，也就是说，如果不指定配置文件路径，我也会自动去以下路径查找配置文件的：</p><ul><li>当前目录下的 <code>yutto.toml</code></li><li><a href="https://specifications.freedesktop.org/basedir-spec/latest/" target="_blank" rel="noreferrer"><code>XDG_CONFIG_HOME</code></a> 下的 <code>yutto/yutto.toml</code> 文件</li><li>非 Windows 系统下的 <code>~/.config/yutto/yutto.toml</code>，Windows 系统下的 <code>~/AppData/Roaming/yutto/yutto.toml</code></li></ul><p>你可以通过配置文件来设置一些默认参数，整体上与命令行参数基本一致，下面以一些示例来展示配置文件的写法：</p><div class="vp-code-block-title"><div class="vp-code-block-title-bar"><span class="vp-code-block-title-text" data-title="yutto.toml">yutto.toml</span></div><div class="language-toml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">toml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#:schema https://raw.githubusercontent.com/yutto-dev/yutto/refs/heads/main/schemas/config.json</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">basic</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 设置下载目录</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dir = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/path/to/download&quot;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 设置临时文件目录</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">tmp_dir = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/path/to/tmp&quot;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 设置 SESSDATA</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">sessdata = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;***************&quot;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 设置大会员严格校验</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">vip_strict = </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 设置登录严格校验</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">login_strict = </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">resource</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 不下载字幕</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">require_subtitle = </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">danmaku</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 设置弹幕速度</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">speed = </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2.0</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 设置弹幕屏蔽关键词</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">block_keyword_patterns = [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   &quot;.*keyword1.*&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   &quot;.*keyword2.*&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">batch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 下载额外剧集</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">with_section = </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span></code></pre></div></div><p>如果你使用 VS Code 对配置文件编辑，强烈建议使用 <a href="https://marketplace.visualstudio.com/items?itemName=tamasfe.even-better-toml" target="_blank" rel="noreferrer">Even Better TOML</a> 扩展，配合我提供的 schema，可以获得最佳的提示体验。</p>`,8))])}const b=e(d,[["render",o]]);export{C as __pageData,b as default};
